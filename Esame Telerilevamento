#________________________Esame Telerilevamento________________________________________________

# Ogni lavoro che svoglo necessita di pacchatti che prima vengono scaricati e poi rischiamati su R.

library(raster) 
library(rasterVis) # posso utilizzare la funzione levelplot
library(rgdal) # mi permette di analizzare le firme spettrali
library(ggplot2) # mi permette l'uso delle funzioni ggplot
library(RStoolbox)# permette l'uso della Unsupervised Classification
library(gridExtra)   # permette l'uso e creazione di tabelle e grafici
library(grid)

# La cartella, dove si trovano i dati, va collegata al software.

setwd("C:/lab/Landsatesame")

#________________________Satelliti e bande_____________________________________________________

# I satelliti e le bande scelte sono le seguenti.

#Landsat 4-5
#Band 1   -> Blu
#Band 2   -> Verde
#Band 3   -> Rosso
#Band 4   -> Nir
#Band 5   -> Nir
#Band 6   -> Thermal

#Landsat 7
#Band 1   -> Blu
#Band 2   -> Verde
#Band 3   -> Rosso
#Band 4   -> Nir
#Band 5   -> SWIR 1 (infrarosso)
#Band 7   -> MIR

#Landsat 8
#Band 1   -> Coastal aerosol	
#Band 2   -> Blue
#Band 3   -> Verde
#Band 4   -> Rosso
#Band 5   -> NIR	
#Band 6   -> SWIR 1 (infrarosso)
#Band 7   -> SWIR 2 (infrarosso)

# _______________________Uso list files per creare una lista di files  e rinomino__________________________

# la "funzione list.files" mi permette di creare una lista.

A91<-list.files(pattern="1991A")
# lapply permette di importare la lista di file.  
importA91<-lapply(A91,raster)
# Funzione stack crea un unico pacchetto di file.
A1991<-stack(importA91)
plot(A1991)

# con la funzione extent e crop ritaglio le immagini a mia scelta.

e <- extent(200000,320000,-1190000,-1040000)
A1991crop <- crop(A1991, e)
plotRGB(A1991crop, 4, 3, 2, stretch="lin")

# faccio lo stesso per le altre immagini

A01<-list.files(pattern="2001A")
importA01<-lapply(A01,raster)
A2001<-stack(importA01)
plot(A2001)

e <- extent(200000,320000,-1190000,-1040000)
A2001crop <- crop(A2001, e)
plotRGB(A2001crop, 4, 3, 2, stretch="lin")

A11<-list.files(pattern="2011A")
importA11<-lapply(A11,raster)
A2011<-stack(importA11)
plot(A2011)

e <- extent(200000,320000,-1190000,-1040000)
A2011crop <- crop(A2011, e)
plotRGB(A2011crop, 4, 3, 2, stretch="lin")

A21<-list.files(pattern="2021A")
importA21<-lapply(A21,raster)
A2021<-stack(importA21)
plot(A2021)

e <- extent(200000,320000,-1190000,-1040000)
A2021crop <- crop(A2021, e)
plotRGB(A2021crop, 5, 4, 3, stretch="lin")

par(mfrow=c(1,2), mar=c(2,2,2,2))
plotRGB(A1991crop, 3, 2, 1, stretch="Lin")
plotRGB(A2001crop, 3, 2, 1, stretch="Lin")

# uso la funzione "par" al fine di posizionare nella stessa finestra diverse immagini scegliendo righe e colonne con "mfrowc=". 
# plot traccia i dati in R. plotRGB offre la possibilitÃ  di scegliere le bande e di conseguenza i colori delle immagini.

#par(mfrow=c(1,2)
#plotRGB(A2011crop, 3, 2, 1, stretch="Lin")
#plotRGB(A2021crop, 4, 3, 2, stretch="Lin")

# comparo le quattro immagini con plotRGB e plotNDVI per anali vegetazione.
# utilizzo funzione NDVI. Indice quantitativo di verde che oscilla da un valore minimo (0) a un valore massimo (1), dove 0 rappresenta il verde minimo ed 1 il verde massimo.
# plotRGB

# Comparo 4 immagini con RGB a colori naturali: Blu, Red,Green.
# Utilizzo la funzione Stretch="Lin" per stirare le bande.
par(mfrow=c(1,4))
plotRGB(A1991crop, 4, 3, 2, stretch="lin")
plotRGB(A2001crop, 4, 3, 2, stretch="Lin")
plotRGB(A2011crop, 4, 3, 2, stretch="lin")
plotRGB(A2021crop, 5, 4, 3, stretch="lin")

#Utilizzo funzione NDVI. Indice quantitativo di verde che oscilla da un valore minimo  (0) a un valore massimo (1), dove 0 rappresenta il verde minimo ed 1 il verde massimo.
#plotNDVI.

NDVI1991 <- (A1991crop[[4]] - A1991crop[[3]]) / (A1991crop[[4]] + A1991crop[[3]]) 
NDVI2001 <- (A2001crop[[4]] - A2001crop[[3]]) / (A2001crop[[4]] + A2001crop[[3]])
NDVI2011 <- (A2011crop[[4]] - A2011crop[[3]]) / (A2011crop[[4]] + A2011crop[[3]])
NDVI2021 <- (A2021crop[[5]] - A2021crop[[4]]) / (A2021crop[[5]] + A2021crop[[4]])

#Riclassifico con la funzione "reclassify" al fine di impostare i limiti ed i colori. 
NDVI2001R <- reclassify(NDVI2001, cbind(0.5, Inf, NA), right=FALSE)
NDVI2011R <- reclassify(NDVI2011, cbind(-Inf, -0.2, NA))

# la funzione "main" permette di dare un titolo ad ogni immagine.
par(mfrow=c(1,4))
plot(NDVI1991, main="Anno 1991") 
plot(NDVI2001R, main="Anno 2001") 
plot(NDVI2011R, main="Anno 2011") 
plot(NDVI2021, main="Anno 2021") 

# dev.off() per pulire il grafico

dev.off()

# _____________________Classificazione non supervisionata per una visualizzazione netta delle componenti di interesse___________________________

# Classificazione non supervisionata per una visualizzazione netta delle componenti di interesse.
# Utilizzo la fuzione unsuperClass. 
# Attraverso la funzione "set.seed" si possono generare numeri pseudocasuali. 

set.seed(999)
Ari1991 <- unsuperClass(A1991crop, nClasses=4)
set.seed(999)
Ari2001 <- unsuperClass(A2001crop, nClasses=4)
set.seed(999)
Ari2011 <- unsuperClass(A2011crop, nClasses=4)
set.seed(999)
Ari2021 <- unsuperClass(A2021crop, nClasses=4)

#La "colorRampPalette" risulta utile quando si vugliono assegnare colori pecifici alle immagini.

color <- colorRampPalette(c("orange", "dark blue", "dark green", "dark green"))(100)
color2 <- colorRampPalette(c("dark blue", "orange", "dark green", "orange"))(100)
color3 <- colorRampPalette(c("dark blue", "dark green", "orange", "orange"))(100)
color4 <- colorRampPalette(c("dark green", "orange", "dark blue", "orange"))(100)

#Con la funzione "par(mfrow=c(1,4))" creo un multipanel. In questo caso una riga e quattro colonne.

par(mfrow=c(1,4))
plot(Ari1991$map, main="1991", col=color)
plot(Ari2001$map, main="2001", col=color2)
plot(Ari2011$map, main="2011", col=color3)
plot(Ari2021$map, main="2021", col=color4)


# Utilizzo la funzione "freq" per visualizzare i pixel di interesse a secondo delle aree di studio. 
# Si crea una tabella con la conta dei pixel per ogni valore.
# Le aree che mi interessano sono: agricole, boschive, fiume.
Tot <- 909841 + 336690 + 11626443 + 7127026    #   = 20000000 # pixel totali.

freq(Ari1991$map)

#      value    count
# [1,]     1   909841
# [2,]     2   336690
# [3,]     3 11626443
# [4,]     4  7127026

# Ora calcolo la proporzione tra le frequenze di un'immagine e le totali (Tot).
prop1991 <- freq(Ari1991$map) / Tot. La tabella che si crea evidenzia 

#         value     count       Percentuale (%)        Area
# [1,] 5.0e-08 0.04549205                   4.5    Agricola
# [2,] 1.0e-07 0.01683450                   1.7       Fiume
# [3,] 1.5e-07 0.58132215                  58.1    Boschiva
# [4,] 2.0e-07 0.35635130                  35.5    Boschiva

# Faccio lo stesso per le altre immagini.

freq(Ari2001$map)

#      value    count
# [1,]     1   363758
# [2,]     2  1391835
# [3,]     3 17155901
# [4,]     4  1088506

prop2001 <- freq(Ari2001$map) / Tot

#        value      count       Percentuale (%)        Area
# [1,] 5.0e-08 0.01818790                   1.8       Fiume
# [2,] 1.0e-07 0.06959175                   7.0    Agricola
# [3,] 1.5e-07 0.85779505                  85.7    Boschiva
# [4,] 2.0e-07 0.05442530                   5.4    Agricola

freq(Ari2011$map)

#      value    count
# [1,]     1   372971
# [2,]     2 15210663
# [3,]     3  2428076
# [4,]     4  1988290

prop2011 <- freq(Ari2011$map) / Tot

#        value      count       Percentuale (%)      Aree
# [1,] 5.0e-08 0.01864855                   1.8     Fiume
# [2,] 1.0e-07 0.76053315                  76.0  Boschiva
# [3,] 1.5e-07 0.12140380                  12.1  Agricola
# [4,] 2.0e-07 0.09941450                   9,9  Agricola

freq(Ari2021$map)

#      value  count
# [1,]     1 13112769
# [2,]     2  2607912
# [3,]     3   375228
# [4,]     4  3904088
# [5,]    NA        3

prop2021 <- freq(Ari2021$map) / Tot

#        value      count       Percentuale (%)      Aree
# [1,] 5.0e-08 0.65563845                  65.5  Boschiva
# [2,] 1.0e-07 0.13039560                  13.0  Agricola
# [3,] 1.5e-07 0.01876140                   1.9     Fiume
# [4,] 2.0e-07 0.19520440                  19.5  Agricola
# [5,]      NA 0.00000015                    NC

# Clcolo area totale modificata negli anni. 
# Area tot di interesse -> 18000km quadrati. Mi interessa sapere l'area totale in kmq per poi calcolarne i cambiamenti negli anni.
# Ogni pixel equivale a 30m per 30m.

# Anno 1991
#            Percentuale (%)       Area       Km quadrati occupati
#                        4.5   Agricola                        810
#                       93.6   Boschiva                      16848  
#                        1.7      Fiume                        306   

# Anno 2001
#            Percentuale (%)       Area       Km quadrati occupati                        
#                       12.4   Agricola                       2232
#                       85.7   Boschiva                      15426
#                        1.8      Fiume                        324

# Anno 2011
#             Percentuale (%)      Area       Km quadrati occupati          
#                        22.0  Agricola                       3960         
#                        76.0  Boschiva                      13680
#                         1.8     Fiume                        324

# Anno2021
#             Percentuale (%)      Area       Km quadrati occupati
#                        32.5  Agricola                       5850
#                        65.5  Boschiva                      11790           
#                         1.9     Fiume                        342

# dev.off() per pulire il grafico

dev.off()



#______________________________________Crezaione dei grafici_______________________________________

# PRIMO GRAFICO
# Plottaggio con ggplot per le percentuali negli anni.
# Buildiamo un dataframe.

Aree       <- c( "Agricola", "Boschiva", "Fiume")
Percentuali_1991 <- c(4.5, 93.9, 1.7)
Percentuali_2001 <- c(12.4, 85.7, 1.8)
Percentuali_2011 <- c(22, 76, 1.8)
Percentuali_2021 <- c(32.5, 65.5, 1.9)

percentages <- data.frame(Aree,Percentuali_1991,Percentuali_2001,Percentuali_2011,Percentuali_2021)
percentages. La tabella mostra le percentuali delle aree agricole, boschive e fiume.

#       Aree Percentuali_1991 Percentuali_2001 Percentuali_2011 Percentuali_021
# 1 Agricola              4.5             12.4             22.0            32.5
# 2 Boschiva             93.9             85.7             76.0            65.5
# 3    Fiume              1.7              1.8              1.8             1.9

# carico con ggplot
# la funzione "cbind" lega le percentuali alla legenda.
Legenda = c("Agricola", "Boschiva", "Fiume")
percent1991 = cbind(percentages, Legenda)
percent2001 = cbind(percentages, Legenda)
percent2011 = cbind(percentages, Legenda)
percent2021 = cbind(percentages, Legenda)

# creo ggplot e lo rinomino. Scelgo i colori del grafico (values=c).

perc91 <- ggplot( percent1991, aes( x=Aree, y=Percentuali_1991, fill = Legenda)) + geom_bar(stat="identity") + scale_fill_manual("legenda", values = c( "Agricola" = "Orange", "Boschiva" = "dark green", "Fiume" = "dark blue"))
perc01 <- ggplot( percent2001, aes( x=Aree, y=Percentuali_2001, fill = Legenda)) + geom_bar(stat="identity") + scale_fill_manual("legenda", values = c( "Agricola" = "Orange", "Boschiva" = "dark green", "Fiume" = "dark blue"))
perc11 <- ggplot( percent2011, aes( x=Aree, y=Percentuali_2011, fill = Legenda)) + geom_bar(stat="identity") + scale_fill_manual("legenda", values = c( "Agricola" = "Orange", "Boschiva" = "dark green", "Fiume" = "dark blue"))
perc21 <- ggplot( percent2021, aes( x=Aree, y=Percentuali_2021, fill = Legenda)) + geom_bar(stat="identity") + scale_fill_manual("legenda", values = c( "Agricola" = "Orange", "Boschiva" = "dark green", "Fiume" = "dark blue"))

# metto a confronto percentuali. L'operazione "ylim(..)" mi da la possibilitÃ  di sciegliere un valore massimo nel grafico.

grid.arrange(perc91 + ylim(0,95), perc01 + ylim(0,95), perc11 + ylim(0,95), perc21 + ylim(0,95), nrow=1)

# SECONDO GRAFICO
# imposto anni e chilometri.
# creo un dataframe e lo rinomino.

Anni <- c("1991", "2001","2011", "2021")
Area.Agricola_kmq <- c(810,  2232, 3960, 5850)
Area.Boschiva_kmq <- c( 16848, 15426, 13680, 11790)
percent<-data.frame(Anni,Area.Agricola_kmq,Area.Boschiva_kmq)
percent

#  Anni Area.Agricola_kmq Area.Boschiva_kmq
# 1 1991               810             16848
# 2 2001              2232             15426
# 3 2011              3960             13680
# 4 2021              5850             11790

Agricola <- ggplot(percent, aes(x=Anni, y=Area.Agricola_kmq, group = 1)) + geom_line(color = "orange")
Boschiva <- ggplot(percent, aes(x=Anni, y=Area.Boschiva_kmq, group = 1)) + geom_line(color = "green")
grid.arrange(Agricola, Boschiva, nrow = 2) 

# Salvare immagini di R

# Esistono due modi per salvare le immagini. Si puÃ² utilizzare la finzione sotto descritta oppure salvare direttamente l'immagine su R attraverso il tasto destro de mouse.

#png("C:/lab/Landsatesame/Grafico.png", width= 4000, height=1800, res=300)
#plot(Grafico)
#dev.off()

# dev.off() per pulire il grafico

dev.off()

-------------------------------------------------------------------------------------------------------
